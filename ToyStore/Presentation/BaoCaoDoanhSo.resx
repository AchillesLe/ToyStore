<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>